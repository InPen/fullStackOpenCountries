{"version":3,"sources":["components/InputField.js","components/Country.js","components/CountryDetail.js","components/Countries.js","App.js","index.js"],"names":["InputField","htmlFor","label","type","value","onChange","id","Country","country","handleClick","name","onClick","CountryDetail","capital","population","languages","map","language","src","flag","alt","width","height","Countries","countries","weatherData","length","App","props","useState","search","setSearch","setCountries","setWeatherData","useEffect","axios","get","then","countriesResponse","searchResult","data","filter","toLowerCase","includes","ACCESS_KEY","process","REACT_APP_API_KEY","response","className","event","preventDefault","target","countryName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAgBeA,EAdI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,SAAhC,OACjB,qCACE,uBAAOJ,QAASA,EAAhB,SACGC,IAEH,uBACEC,KAAMA,EACNG,GAAIL,EACJG,MAAOA,EACPC,SAAUA,QCADE,EATC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,YAAZ,OACd,gCACE,+BAAOD,EAAQE,OACf,wBAAQC,QAAS,kBAAMF,EAAYD,EAAQE,OAA3C,sBCeWE,EAlBO,SAAC,GAAD,IAAGJ,EAAH,EAAGA,QAAH,OACpB,gCACE,6BAAKA,EAAQE,OACb,6CAAgBF,EAAQK,WACxB,gDAAmBL,EAAQM,cAC3B,2CACCN,EAAQO,UAAUC,KAAI,SAAAC,GAAQ,OAC7B,6BAAyBA,EAASP,MAAzBO,EAASP,SAEpB,qBACEQ,IAAKV,EAAQW,KACbC,IAAG,kBAAaZ,EAAQE,MACxBW,MAAM,QACNC,OAAO,cCyBEC,EAlCG,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,UAAwBf,GAAkB,EAA/BgB,YAA+B,EAAlBhB,aAC3C,OAAIe,EAAUE,OAAS,GAEnB,8BACE,+EAGKF,EAAUE,OAAS,GAAKF,EAAUE,OAAS,GAElD,8BACGF,EAAUR,KAAI,SAAAR,GAAO,OACpB,cAAC,EAAD,CAEEA,QAASA,EACTC,YAAaA,GAFRD,EAAQE,WAOS,IAArBc,EAAUE,OAEjB,8BACGF,EAAUR,KAAI,SAAAR,GAAO,OACpB,cAAC,EAAD,CAAkCA,QAASA,GAAvBA,EAAQE,WAO3B,8BCiCIiB,EA/DH,SAACC,GAAU,MAEOC,mBAAS,IAFhB,mBAEdC,EAFc,KAENC,EAFM,OAGaF,mBAAS,IAHtB,mBAGdL,EAHc,KAGHQ,EAHG,OAKiBH,mBAAS,MAL1B,mBAKdJ,EALc,KAKDQ,EALC,KAQrBC,qBAAU,WACRC,IACGC,IAAI,wCACJC,MAAK,SAAAC,GACJ,GAAe,KAAXR,EAAe,CACjB,IAAMS,EAAeD,EAAkBE,KAAKC,QAAO,SAAAjC,GAAO,OAC1DA,EAAQE,KAAKgC,cAAcC,SAASb,EAAOY,kBAC3CV,EAAaO,SAGlB,CAACT,IAGJI,qBAAU,WACR,IACMU,EAAaC,mIAAYC,kBAC/B,GAAyB,IAArBtB,EAAUE,OAAc,CAC1B,IAAMb,EAAUW,EAAUR,KAAI,SAAAR,GAAO,OAAIA,EAAQK,WAC7CA,EAAQ,IACVsB,IACGC,IADH,UALY,sCAKZ,uBACgCQ,EADhC,kBACoD/B,EAAQ,KACzDwB,MAAK,SAAAU,GACJd,EAAec,EAASP,YAI/B,CAAChB,IAUJ,OACE,uBAAMwB,UAAU,MAAhB,UAEE,cAAC,EAAD,CACE/C,QAAQ,SACRE,KAAK,OACLD,MAAM,iBACNE,MAAO0B,EACPzB,SAhBqB,SAAC4C,GAC1BA,EAAMC,iBACNnB,EAAUkB,EAAME,OAAO/C,UAgBrB,cAAC,EAAD,CACEK,YAfc,SAAC2C,GACnBrB,EAAUqB,IAeN5B,UAAWA,EACXC,YAAaA,QC3DrB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.3ea98857.chunk.js","sourcesContent":["import React from \"react\";\n\nconst InputField = ({ htmlFor, label, type, value, onChange }) => (\n  <>\n    <label htmlFor={htmlFor}>\n      {label}\n    </label>\n    <input\n      type={type}\n      id={htmlFor}\n      value={value}\n      onChange={onChange}\n    />\n  </>\n);\n\nexport default InputField\n","import React from \"react\"\n\nconst Country = ({ country, handleClick }) => (\n  <div>\n    <span>{country.name}</span>\n    <button onClick={() => handleClick(country.name)}>\n      Show\n    </button>\n  </div>\n)\n\nexport default Country\n","import React from \"react\"\n\nconst CountryDetail = ({ country }) => (\n  <div>\n    <h1>{country.name}</h1>\n    <span>Capital: {country.capital}</span>\n    <span>Population: {country.population}</span>\n    <h2>Languages</h2>\n    {country.languages.map(language => (\n      <li key={language.name}>{language.name}</li>\n    ))}\n    <img\n      src={country.flag}\n      alt={`Flag of ${country.name}`}\n      width=\"100px\"\n      height=\"100px\"\n    />\n  </div>\n);\n\nexport default CountryDetail\n","import React from \"react\";\n// import WeatherData from \"./WeatherData\";\nimport Country from \"./Country\";\nimport CountryDetail from \"./CountryDetail\";\n\n\nconst Countries = ({ countries, weatherData, handleClick }) => {\n  if (countries.length > 10) {\n    return (\n      <div>\n        <span>Too many matches, specify another filter.</span>\n      </div>\n    );\n  } else if (countries.length > 1 && countries.length < 10) {\n    return (\n      <div>\n        {countries.map(country => (\n          <Country\n            key={country.name}\n            country={country}\n            handleClick={handleClick}\n          />\n        ))}\n      </div>\n    );\n  } else if (countries.length === 1) {\n    return (\n      <div>\n        {countries.map(country => (\n          <CountryDetail key={country.name} country={country} />\n        ))}\n\n      {/*<WeatherData weatherData={weatherData} /> */}\n      </div>\n    );\n  } else {\n    return <></>\n  }\n};\n\nexport default Countries\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n//components\nimport InputField from \"./components/InputField\";\nimport Countries from \"./components/Countries\";\n\nconst App = (props) => {\n//search is an empty string. setSearch is a function used to update search\n  const [search, setSearch] = useState('')\n  const [countries, setCountries] = useState([])\n// why null and not [] like countries?\n  const [weatherData, setWeatherData] = useState(null)\n\n//GET country data from api\n  useEffect(() => {\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(countriesResponse => {\n        if (search !== \"\") {\n          const searchResult = countriesResponse.data.filter(country =>\n          country.name.toLowerCase().includes(search.toLowerCase()))\n          setCountries(searchResult)\n        }\n      })\n  }, [search])\n\n// GET weather info from api\n  useEffect(() => {\n    const baseUrl = \"http://api.weatherstack.com/current\";\n    const ACCESS_KEY = process.env.REACT_APP_API_KEY;\n    if (countries.length === 1) {\n      const capital = countries.map(country => country.capital);\n      if (capital[0]) {\n        axios\n          .get(`${baseUrl}?access_key=${ACCESS_KEY}&query=${capital[0]}`)\n          .then(response => {\n            setWeatherData(response.data);\n          });\n      }\n    }\n  }, [countries]);\n\n  const handleSearchChange = (event) => {\n    event.preventDefault()\n    setSearch(event.target.value)\n  }\n  const handleClick = (countryName) => {\n    setSearch(countryName)\n  }\n\n  return (\n    <main className=\"App\">\n      {/* Search for country data by name */}\n      <InputField\n        htmlFor=\"search\"\n        type=\"text\"\n        label=\"Find countries\"\n        value={search}\n        onChange={handleSearchChange}\n      />\n      <Countries\n        handleClick={handleClick}\n        countries={countries}\n        weatherData={weatherData}\n      />\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}